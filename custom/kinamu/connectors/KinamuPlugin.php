<?php

/*********************************************************************************
*
* DO NOT MODIFY THIS FILE!
*
* This file is part of KINAMU EvalancheConnector, an enhanced module for Sugar (TM). 
* Sugar (TM) is developed by SugarCRM Inc. (C).
* 
* KINAMU EvalancheConnector is licensed software and may only be used in alignment with the 
* End User License Agreement (EULA) received with this software. This software is copyrighted 
* and may not be further distributed without any written consent of 
* KINAMU Business Solutions GmbH (C).
* 
* KINAMU EvalancheConnector: Copyright (C) 2016 by KINAMU Business Solutions GmbH. All rights reserved.
*
* You can contact KINAMU Business Solutions GmbH via email at office@kinamu.com
*
********************************************************************************/


 class KinamuPlugin { public $sPluginName; public $sPluginPath; public $oLog; public $oView; public $credaris_138 = array(); public $aExternalRecords = array(); public $credaris_150 = array(); public $credaris_151 = ''; public $iTimeStart = 0; public $iTimeEnd = 0; public $aTasks = array(); public function __construct() { $this->iTimeStart = microtime(true); $this->sPluginName = $this->credaris_113(); $this->setLogInstance(); } public function credaris_112() { exit('INFO: method &quot;credaris_112()&quot; must be overridden by the plugin class!'); } public function credaris_113() { exit('INFO: method &quot;credaris_113()&quot; must be overridden by the plugin class!'); } public function credaris_149() { exit('INFO: method &quot;credaris_149()&quot; must be overridden by the plugin class!'); } public function getNumberFormattedFields($sModule, $sBean) { $this->loadVardefs($sModule, $sBean); $dictionary = $GLOBALS["dictionary"]; $aFields = array(); if(isset($dictionary[$sBean]) && isset($dictionary[$sBean]['fields'])) { foreach($dictionary[$sBean]['fields'] as $sSugarProperty => $aField) { if(isset($aField['type']) && in_array($aField['type'], array('currency', 'decimal', 'float'))) { $aFields[] = $sSugarProperty; } } } return $aFields; } public function loadVardefs($sModule, $sBean) { $oBean = BeanFactory::newBean($sModule); $oBean->getFieldDefinitions(); return; } public function getSugarFields($sModule, $sBean) { $this->loadVardefs($sModule, $sBean); $dictionary = $GLOBALS["dictionary"]; if(isset($dictionary[$sBean]) && isset($dictionary[$sBean]['fields'])) { return $dictionary[$sBean]['fields']; } return array(); } public function getSugarFieldNames($sModule, $sBean) { $this->loadVardefs($sModule, $sBean); $dictionary = $GLOBALS["dictionary"]; $aFields = array(); foreach($dictionary[$sBean]['fields'] as $aDefinition) { $sName = isset($aDefinition['vname']) ? trim(translate($aDefinition['vname']), $sModule) : ''; if(subStr($sName, -1) == ':') { $sName = subStr($sName, 0, -1); } if(empty($sName)) { $sName = $aDefinition['name']; } $aFields[$aDefinition['name']] = $sName; } return $aFields; } public static function getACLCategoryName($sPlugin) { return 'K_MSExcelConnector.Plugin.' . $sPlugin; } public static function createACL($sPlugin) { $bAvailable = false; $sCategory = self::getACLCategoryName($sPlugin); $sSql = "SELECT * FROM acl_actions WHERE acltype='module' AND category='" . $sCategory . "'"; $result = $GLOBALS['db']->query($sSql, true, ""); $sRecords = ''; while($row = $GLOBALS['db']->fetchByAssoc($result)) { $bAvailable = true; break; } if($bAvailable == false) { $sTime = date("Y-m-d H:i:s"); $sSql = "INSERT INTO `acl_actions` (`id`, `date_entered`, `date_modified`, `modified_user_id`, `created_by`, `name`, `category`, `acltype`, `aclaccess`, `deleted`) VALUES "; $sSql .= " ('" . create_guid() . "', '" . $sTime . "', '" . $sTime . "', '1', NULL, 'access',     '" . $sCategory . "', 'module', 89, 0);"; $GLOBALS['db']->query($sSql, true, ""); } } public static function removeACL($sPlugin) { $sSql = "DELETE FROM acl_actions WHERE acltype='module' AND category='" . self::getACLCategoryName($sPlugin) . "'"; $GLOBALS['db']->query($sSql, true, ""); } public static function isAccessAllowed($sPluginModuleName) { return true; $bAccess = false; if(!isset($_SESSION['K_MSExcelConnector']['Plugin'][$sPluginModuleName])) { $current_user = $GLOBALS["current_user"]; $sugar_config = $GLOBALS["sugar_config"]; if($current_user->id == 1) { $bAccess = true; } if(!$bAccess) { if(is_admin($current_user)) { $bAccess = true; } } if(!$bAccess) { if((isset($_SESSION['ACL'][$current_user->id][$sPluginModuleName]['module']['access']['aclaccess'])) && ($_SESSION['ACL'][$current_user->id][$sPluginModuleName]['module']['access']['aclaccess'] > 0) ) { $bAccess = true; } } $_SESSION['K_MSExcelConnector']['Plugin'][$sPluginModuleName]['bAccess'] = $bAccess; } return $_SESSION['K_MSExcelConnector']['Plugin'][$sPluginModuleName]['bAccess']; } public function setLogInstance() { exit('INFO: method &quot;setLogInstance()&quot; must be overridden by the plugin class!'); } public function getFormattedStringForDatabase($sString) { if(mb_detect_encoding($sString, 'auto') == "ASCII") { $sString = iconv("ASCII", 'UTF-8', $sString); } $sString = iconv("UTF-8", "ISO-8859-1", $sString); $sString = utf8_encode($sString); return mysql_real_escape_string($sString); } } 